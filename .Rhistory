devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
local_unique_id <- unique_id
xafty_items <- rval_sm[[local_unique_id]]
xafty_button_id <- xafty_items[["xafty_button_id"]]
xafty_ui_output_id <- xafty_items[["xafty_ui_output_id"]]
rhandsontabe_id <- xafty_items[["render_handsontable_id"]]
rhandsontabe_id
check_table <- rval_xafty_list$check_table
validity_table <- rval_xafty_list$validity_table
xafty_rule_items <- rval_sm[[local_unique_id]]
xafty_rule_items
devtools::load_all(".")
run_app()
local_unique_id <- unique_id
xafty_items <- rval_sm[[local_unique_id]]
xafty_button_id <- xafty_items[["xafty_button_id"]]
xafty_ui_output_id <- xafty_items[["xafty_ui_output_id"]]
rhandsontabe_id <- xafty_items[["render_handsontable_id"]]
check_table <- rval_xafty_list$check_table
validity_table <- rval_xafty_list$validity_table
xafty_rule_items <- rval_sm[[local_unique_id]]
xafty_rule_items
!any(xafty_rule_items$filter_result)
xafty_rule_items$filter_function(check_table, validity_table = validity_table,
filter_column = xafty_rule_items$column_name,
xafty_rule = xafty_rule_items$rule_syntax,
xafty_values = xafty_rule_items$values)
check_result_logical <- xafty_rule_items$filter_function(check_table, validity_table = validity_table,
filter_column = xafty_rule_items$column_name,
xafty_rule = xafty_rule_items$rule_syntax,
xafty_values = xafty_rule_items$values)
false_values <- check_table[[xafty_rule_items$column_name]][check_result_logical]
row_highlight <- which(check_result_logical) - 1
col_highlight <- which(colnames(check_table) == xafty_rule_items$column_name) - 1
output[[rhandsontabe_id]] <-  rhandsontable::renderRHandsontable({
rhandsontable::rhandsontable(check_table, col_highlight = col_highlight,
row_highlight = row_highlight) |>
rhandsontable::hot_cols(renderer = "
function(instance, td, row, col, prop, value, cellProperties) {
Handsontable.renderers.TextRenderer.apply(this, arguments);
tbl = this.HTMLWidgets.widgets[0]
hcols = tbl.params.col_highlight
hcols = hcols instanceof Array ? hcols : [hcols]
hrows = tbl.params.row_highlight
hrows = hrows instanceof Array ? hrows : [hrows]
if (hcols.includes(col) && hrows.includes(row)) {
td.style.background = 'red';
}
else if (hcols.includes(col)) {
td.style.background = 'lightblue';
}
else if (hrows.includes(row)) {
td.style.background = 'pink';
}
return td;
}")
})
!any(xafty_rule_items$filter_result)
xafty_rule_items
validity_table
check_table
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
shiny::runApp('C:/Users/david/R_Projects/test_app')
devtools::load_all(".")
run_app()
local_i <- i
xafty_button_id <- xafty_rules_ids[[local_i]]
xafty_ui_output_id <- xafty_message_ids[[local_i]]
rhandsontabe_id <- xafty_table_ids[[local_i]]
render_handsontable_id <- paste0("r_", rhandsontabe_id)
rhandsontabe_id
rhandsontabe_id
output[[rhandsontabe_id]]
rhandsontabe_id
ns(render_handsontable_id)
rhandsontable::rHandsontableOutput(ns(render_handsontable_id)
)
rhandsontabe_id
render_handsontable_id
devtools::load_all(".")
run_app()
local_unique_id <- unique_id
xafty_items <- rval_sm[[local_unique_id]]
xafty_button_id <- xafty_items[["xafty_button_id"]]
xafty_ui_output_id <- xafty_items[["xafty_ui_output_id"]]
render_handsontable_id <- xafty_items[["render_handsontable_id"]]
render_handsontable_id
render_handsontable_id
input[[xafty_button_id]]
xafty_button_id
check_table <- rval_xafty_list$check_table
validity_table <- rval_xafty_list$validity_table
xafty_rule_items <- rval_sm[[local_unique_id]]
xafty_rule_items
render_handsontable_id
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
install.packages("reactlog")
library(reactlog)
reactlog_enable()
runApp('C:/Users/david/R_Projects/test_app')
reactlog_show()
reactlog_show()
reactlog_show()
reactlog_enable()
runApp('C:/Users/david/R_Projects/test_app')
reactlog_show()
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
runApp('C:/Users/david/R_Projects/test_app')
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
check_table <- rval_xafty_list$check_table
validity_table <- rval_xafty_list$validity_table
xafty_rule_items <- rval_sm[[local_unique_id]]
if (!any(xafty_rule_items$filter_result)) {
output[[xafty_ui_output_id]] <- shiny::renderUI(p(xafty_rule_items$message))
} else {
check_result_logical <- xafty_rule_items$filter_function(check_table, validity_table = validity_table,
filter_column = xafty_rule_items$column_name,
xafty_rule = xafty_rule_items$rule_syntax,
xafty_values = xafty_rule_items$values)
false_values <- check_table[[xafty_rule_items$column_name]][check_result_logical]
row_highlight <- which(check_result_logical) - 1
col_highlight <- which(colnames(check_table) == xafty_rule_items$column_name) - 1
output[[render_handsontable_id]] <-  rhandsontable::renderRHandsontable({
rhandsontable::rhandsontable(check_table, col_highlight = col_highlight,
row_highlight = row_highlight) |>
rhandsontable::hot_cols(renderer = "
function(instance, td, row, col, prop, value, cellProperties) {
Handsontable.renderers.TextRenderer.apply(this, arguments);
tbl = this.HTMLWidgets.widgets[0]
hcols = tbl.params.col_highlight
hcols = hcols instanceof Array ? hcols : [hcols]
hrows = tbl.params.row_highlight
hrows = hrows instanceof Array ? hrows : [hrows]
if (hcols.includes(col) && hrows.includes(row)) {
td.style.background = 'red';
}
else if (hcols.includes(col)) {
td.style.background = 'lightblue';
}
else if (hrows.includes(row)) {
td.style.background = 'pink';
}
return td;
}")
})
}
devtools::load_all(".")
run_app()
check_result_logical
row_highlight
col_highlight
output[[render_handsontable_id]]
render_handsontable_id
Q
devtools::load_all(".")
run_app()
render_handsontable_id
rhandsontable::renderRHandsontable({
rhandsontable::rhandsontable(check_table, col_highlight = col_highlight,
row_highlight = row_highlight) |>
rhandsontable::hot_cols(renderer = "
function(instance, td, row, col, prop, value, cellProperties) {
Handsontable.renderers.TextRenderer.apply(this, arguments);
tbl = this.HTMLWidgets.widgets[0]
hcols = tbl.params.col_highlight
hcols = hcols instanceof Array ? hcols : [hcols]
hrows = tbl.params.row_highlight
hrows = hrows instanceof Array ? hrows : [hrows]
if (hcols.includes(col) && hrows.includes(row)) {
td.style.background = 'red';
}
else if (hcols.includes(col)) {
td.style.background = 'lightblue';
}
else if (hrows.includes(row)) {
td.style.background = 'pink';
}
return td;
}")
)
rhandsontable::renderRHandsontable({
rhandsontable::rhandsontable(check_table, col_highlight = col_highlight,
row_highlight = row_highlight) |>
rhandsontable::hot_cols(renderer = "
function(instance, td, row, col, prop, value, cellProperties) {
Handsontable.renderers.TextRenderer.apply(this, arguments);
tbl = this.HTMLWidgets.widgets[0]
hcols = tbl.params.col_highlight
hcols = hcols instanceof Array ? hcols : [hcols]
hrows = tbl.params.row_highlight
hrows = hrows instanceof Array ? hrows : [hrows]
if (hcols.includes(col) && hrows.includes(row)) {
td.style.background = 'red';
}
else if (hcols.includes(col)) {
td.style.background = 'lightblue';
}
else if (hrows.includes(row)) {
td.style.background = 'pink';
}
return td;
}")
})
devtools::load_all(".")
run_app()
check_table
devtools::load_all(".")
run_app()
run_app()
devtools::load_all(".")
run_app()
?rhandsontable
devtools::load_all(".")
run_app()
render_handsontable_id
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
ns(r_table_factor_Name)
ns("r_table_factor_Name")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?rhandsontable
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
print(input[[render_handsontable_id]]$changes)
input[[render_handsontable_id]]$changes[[2]]
input[[render_handsontable_id]]$changes[[1]][[2]]
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
input[[render_handsontable_id]]$changes
input[[render_handsontable_id]]$changes$changes
input[[render_handsontable_id]]$changes$changes
input[[render_handsontable_id]]$changes
input[[render_handsontable_id]]$changes$changes[[1]]
input[[render_handsontable_id]]$changes$changes[[1]][[2]]
input[[render_handsontable_id]]$changes$changes[[1]][[4]]
row_change <- input[[render_handsontable_id]]$changes$changes[[1]][[1]] + 1
col_change <- input[[render_handsontable_id]]$changes$changes[[1]][[2]] + 1
changed_to <- input[[render_handsontable_id]]$changes$changes[[1]][[4]]
check_table <- rval_xafty_list$check_table
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
check_table
check_result_logical <- xafty_rule_items$filter_function(check_table, validity_table = validity_table,
filter_column = xafty_rule_items$column_name,
xafty_rule = xafty_rule_items$rule_syntax,
xafty_values = xafty_rule_items$values)
rval_sm[[local_unique_id]]$filter_result
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
!any(xafty_rule_items$filter_result)
xafty_rule_items
xafty_rule_items$filter_result)
xafty_rule_items$filter_result
xafty_rule_items$filter_function(check_table, validity_table = validity_table,
filter_column = xafty_rule_items$column_name,
xafty_rule = xafty_rule_items$rule_syntax,
xafty_values = xafty_rule_items$values)
xafty_rule_items$rule_syntax
xafty_rule_items$check_function(check_table, validity_table)
remotes::install_local("../xafty/")
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
xafty_rule_items$rule_type
xafty_rule_items$rule_type == "data_type"
check_table[xafty_rule_items$column_name]
xafty_rule_items$change_type_function(column_check_table)
column_check_table <- check_table[xafty_rule_items$column_name]
changed_column_check_table <- xafty_rule_items$change_type_function(column_check_table)
xafty_rule_items$change_type_function
xafty_rule_items$rule_type
local_unique_id
xafty_rule_items$rule_syntax
xafty_rule_items$change_type_function
remotes::install_local("../xafty/", force = TRUE)
devtools::load_all(".")
devtools::load_all(".")
run_app()
check_table <- rval_xafty_list$check_table
validity_table <- rval_xafty_list$validity_table
xafty_rule_items <- rval_sm[[local_unique_id]]
xafty_rule_items
xafty_rule_items$rule_type
xafty_rule_items$change_type_function
column_check_table <- check_table[xafty_rule_items$column_name]
changed_column_check_table <- xafty_rule_items$change_type_function(column_check_table)
column_check_table
column_check_table
check_table[xafty_rule_items$column_name, drop = TRUE]
check_table[, xafty_rule_items$column_name]
column_check_table <- check_table[, xafty_rule_items$column_name]
xafty_rule_items$change_type_function(column_check_table)
identical(values_check_table, as.character(changed_values_check_table))
values_check_table <- check_table[, xafty_rule_items$column_name]
changed_values_check_table <- xafty_rule_items$change_type_function(column_check_table)
identical(values_check_table, as.character(changed_values_check_table))
check_table[[xafty_rule_items$column_name]]
changed_values_check_table
check_table[[xafty_rule_items$column_name]] <- changed_values_check_table
xafty_rule_items
xafty_rule_items$filter_result
rep(FALSE, length(changed_values_check_table))
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
character(2)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
install.packages("glue")
install.packages("glue")
devtools::load_all(".")
run_app()
paste0("[", row_highlight, "]", collapse = ",")
col_highlight
paste0("[", col_highlight, "]", collapse = ",")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
js_row_highlight
paste0("[", row_highlight, "]", collapse = ",", recycle0 = FALSE)
paste0(row_highlight, collapse = ",")
js_row_highlight <- paste0(row_highlight, collapse = ",")
js_row_highlight <- paste0("[", js_row_highlight, "]")
js_row_highlight
js_col_highlight <- paste0(col_highlight, collapse = ",")
js_col_highlight <- paste0("[", col_highlight, "]")
js_col_highlight
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?card
install.packages("shinyjs")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
usethis::use_package("shinyjs")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
xafty::get_xafty_list_items(xafty_list = xafty_list, column = xafty_rule_items$column_name, item = "test_result")
unlist(test_result_all_rules)
test_result_all_rules <- xafty::get_xafty_list_items(xafty_list = xafty_list,
column = xafty_rule_items$column_name,
item = "test_result")
unlist(test_result_all_rules)
do.call(c, test_result_all_rules)
single_col_check_table <- check_table[xafty_rule_items$column_name]
single_col_check_table
xafty_rule_items$check_function(single_col_check_table, validity_table)
new_test_result <- xafty_rule_items$check_function(single_col_check_table, validity_table)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
xafty_list <- xafty_list()
names(xafty_list[xafty_rule_items$column_name])
names(xafty_list[[xafty_rule_items$column_name]])
xafty_list <- xafty_list()
xafty_rules <- names(xafty_list[[xafty_rule_items$column_name]])
unique_id <- paste0(xafty_rule_items$column_name, xafty_rules)
unique_id
sapply(unique_id, \(x){
rval_sm[[x]]$test_result
})
single_col_check_table <- check_table[xafty_rule_items$column_name]
new_test_result <- xafty_rule_items$check_function(single_col_check_table, validity_table)
rval_sm[[local_unique_id]]$test_result <- new_test_result$Check_Result
rval_sm[[local_unique_id]]$test_result
sapply(unique_id, \(x){
rval_sm[[x]]$test_result
})
test_result_all_rules <-  sapply(unique_id, \(x){
rval_sm[[x]]$test_result
})
all(test_result_all_rules)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run
run_app()
devtools::load_all(".")
run_app()
1800-600
1200/1800
1800/1.66
1200/600
1800/3
devtools::load_all(".")
run_app()
